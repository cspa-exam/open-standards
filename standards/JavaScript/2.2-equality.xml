<group name="Numbers and Strings">
  <question id="22000">
    <body>
      After the following code runs, what will be the values of `result1` and `result2`?

      ```js
      var input = "23";
      var result1 = input == 23;
      var result2 = input === 23;
      ```
    </body>

    <choice-group name="result1" label="`result1`">
      <choice answer>true</choice>
      <choice>false</choice>
    </choice-group>

    <choice-group name="result2" label="`result2`">
      <choice>true</choice>
      <choice answer>false</choice>
    </choice-group>
  </question>

  <question id="22001">
    <body>
      After the following code runs, what will be the values of `result1` and `result2`?

      ```js
      var input = 50;
      var result1 = input == "50";
      var result2 = input === "50";
      ```
    </body>

    <choice-group name="result1" label="`result1`">
      <choice answer>true</choice>
      <choice>false</choice>
    </choice-group>

    <choice-group name="result2" label="`result2`">
      <choice>true</choice>
      <choice answer>false</choice>
    </choice-group>
  </question>
</group>

<group name="Arrays">
  <question id="22002">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      var a = [10,20];
      var b = [10,20];
      var result = a === b;
      ```
    </body>
    <choice-group>
      <choice>true</choice>
      <choice answer>false</choice>
    </choice-group>
  </question>

  <question id="22003">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      var a = [10,20];
      var b = a.slice();
      var result = a === b;
      ```
    </body>
    <choice-group>
      <choice>true</choice>
      <choice answer>false</choice>
    </choice-group>
  </question>

  <question id="22004">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      var a = [10,20];
      var b = a;
      var result = a === b;
      ```
    </body>
    <choice-group>
      <choice answer>true</choice>
      <choice>false</choice>
    </choice-group>
  </question>

  <question id="22005">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      var a = [["bar"], ["bar"]];
      var result = a[0] === a[1];
      ```
    </body>
    <choice-group>
      <choice>true</choice>
      <choice answer>false</choice>
    </choice-group>
  </question>
</group>

<group name="Objects">
  <question id="22006">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      var result = {} === {};
      ```
    </body>
    <choice-group>
      <choice>true</choice>
      <choice answer>false</choice>
    </choice-group>
  </question>

  <question id="22007">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      var first = {};
      var second = {};
      var result = first === second;
      ```
    </body>
    <choice-group>
      <choice>true</choice>
      <choice answer>false</choice>
    </choice-group>
  </question>

  <question id="22008">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      var first = {
        x: 20
      };
      var second = {
        x: 20
      };
      var result = first.x === second.x;
      ```
    </body>
    <choice-group>
      <choice answer>true</choice>
      <choice>false</choice>
    </choice-group>
  </question>

  <question id="22009">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      var first = {
        inner: { data: 30 }
      };
      var second = {
        inner: { data: 30 }
      };
      var result = first.inner === second.inner;
      ```
    </body>
    <choice-group>
      <choice>true</choice>
      <choice answer>false</choice>
    </choice-group>
  </question>

  <question id="22010">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      var first = {
        inner: { data: 30 }
      };
      var second = {
        inner: first.inner
      };
      var result = first.inner === second.inner;
      ```
    </body>
    <choice-group>
      <choice answer>true</choice>
      <choice>false</choice>
    </choice-group>
  </question>
</group>
