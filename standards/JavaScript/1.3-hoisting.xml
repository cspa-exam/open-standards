<group name="Hoisting &amp; Invoking">
  <question id="13000">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      function f () { return g() + 10; }

      var g = function () { return 10; }

      var result = f();
      ```
    </body>
    <choice-group>
      <choice>10</choice>
      <choice answer>20</choice>
      <choice>None of the above; this code throws an error.</choice>
    </choice-group>
  </question>

  <question id="13001">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      var result = f();

      function f () { return g() + 10; }

      var g = function () { return 10; }
      ```
    </body>
    <choice-group>
      <choice>10</choice>
      <choice>20</choice>
      <choice answer>None of the above; this code throws an error.</choice>
    </choice-group>
  </question>

  <question id="13002">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      var result = f();

      function f () { return 10; }

      var g = function () { return 10; }
      ```
    </body>
    <choice-group>
      <choice answer>10</choice>
      <choice>20</choice>
      <choice>None of the above; this code throws an error.</choice>
    </choice-group>
  </question>
</group>

<group name="Variable Hoisting">
  <question id="13003">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      function foo () {
        var temp = x;
        var x = 10;
        return temp;
      }

      var result = foo();
      ```
    </body>
    <choice-group>
      <choice>10</choice>
      <choice>null</choice>
      <choice answer>undefined</choice>
      <choice>None of the above; this code throws an error.</choice>
    </choice-group>
  </question>
</group>

<group name="Hoisting in Function Scopes">
  <question id="13004">
    <body>
      After the following code runs, what will be the value of `result`?

      ```js
      function foo () {
        return bar() + 20;

        function bar () {
          return 10;
        }
      }

      var result = foo();
      ```
    </body>
    <choice-group>
      <choice>10</choice>
      <choice>20</choice>
      <choice answer>30</choice>
      <choice>NaN</choice>
      <choice>None of the above; this code throws an error.</choice>
    </choice-group>
  </question>
</group>
